{"name": "test_loginfunc[test_input0-expect0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (1 == 0)", "trace": "test_input = {'userAccount': '15167168967', 'userPwd': '123456'}, expect = {'rcode': 0, 'scode': 0}\n\n    @allure.story(\"---登录用例---\")\n    @pytest.mark.parametrize(\"test_input,expect\",body)\n    def test_loginfunc(test_input,expect):\n        url = \"http://www.fhd001.com/loginAccount.do\"\n        header = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36\",\n                      \"Content-Type\":\"application/x-www-form-urlencoded; charset=UTF-8\",\n                      \"Referer\":\"http://www.fhd001.com/\" }   # get方法其它加个ser-Agent就可以了\n        body = {\"userAccount\":test_input['userAccount'],\n                    \"userPwd\":test_input['userPwd']\n        } #参数存字典\n        s = requests.session()\n        request = s.post(url=url,data=body,headers=header)\n        r   =  request.json()  #解析json\n>       assert r[\"rcode\"] == expect[\"rcode\"] and r[\"scode\"] == expect[\"scode\"]\nE       assert (1 == 0)\n\ntest_case\\test_login\\test_logincase.py:34: AssertionError"}, "parameters": [{"name": "test_input", "value": "{'userAccount': '15167168967', 'userPwd': '123456'}"}, {"name": "expect", "value": "{'rcode': 0, 'scode': 0}"}], "start": 1623211350505, "stop": 1623211350536, "uuid": "fa591a17-ffca-4cf7-80e1-03c8e28bcc28", "historyId": "0fb2926bbeee5d8deb4856ae58256be1", "testCaseId": "16a8472b5ed32c2c765416458c581447", "fullName": "test_case.test_login.test_logincase#test_loginfunc", "labels": [{"name": "story", "value": "---登录用例---"}, {"name": "parentSuite", "value": "test_case.test_login"}, {"name": "suite", "value": "test_logincase"}, {"name": "host", "value": "DESKTOP-SQ7MPGP"}, {"name": "thread", "value": "23256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_login.test_logincase"}]}